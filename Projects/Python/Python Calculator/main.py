from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import math


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(410, 745)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Calculator_512.webp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.OutputLabel = QtWidgets.QLabel(self.centralwidget)
        self.OutputLabel.setGeometry(QtCore.QRect(10, 10, 391, 101))
        font = QtGui.QFont()
        font.setPointSize(26)
        self.OutputLabel.setFont(font)
        self.OutputLabel.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.OutputLabel.setFrameShape(QtWidgets.QFrame.Box)
        self.OutputLabel.setFrameShadow(QtWidgets.QFrame.Plain)
        self.OutputLabel.setScaledContents(False)
        self.OutputLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.OutputLabel.setWordWrap(True)
        self.OutputLabel.setObjectName("OutputLabel")
        self.Percentage = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.calculate_it("%"))
        self.Percentage.setGeometry(QtCore.QRect(10, 120, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Percentage.setFont(font)
        self.Percentage.setObjectName("Percentage")
        self.C = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("C"))
        self.C.setGeometry(QtCore.QRect(110, 120, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.C.setFont(font)
        self.C.setObjectName("C")
        self.Delete = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("D"))
        self.Delete.setGeometry(QtCore.QRect(209, 120, 191, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Delete.setFont(font)
        self.Delete.setObjectName("Delete")
        self.Root = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.calculate_it("R"))
        self.Root.setGeometry(QtCore.QRect(210, 220, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Root.setFont(font)
        self.Root.setObjectName("Root")
        self.Power = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.calculate_it("P"))
        self.Power.setGeometry(QtCore.QRect(110, 220, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Power.setFont(font)
        self.Power.setObjectName("Power")
        self.Division = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("/"))
        self.Division.setGeometry(QtCore.QRect(310, 220, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Division.setFont(font)
        self.Division.setObjectName("Division")
        self.Inverse = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.calculate_it("1/x"))
        self.Inverse.setGeometry(QtCore.QRect(10, 220, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Inverse.setFont(font)
        self.Inverse.setObjectName("Inverse")
        self.Eight = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("8"))
        self.Eight.setGeometry(QtCore.QRect(110, 320, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Eight.setFont(font)
        self.Eight.setObjectName("Eight")
        self.Seven = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("7"))
        self.Seven.setGeometry(QtCore.QRect(10, 320, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Seven.setFont(font)
        self.Seven.setObjectName("Seven")
        self.Nine = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("9"))
        self.Nine.setGeometry(QtCore.QRect(210, 320, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Nine.setFont(font)
        self.Nine.setObjectName("Nine")
        self.Multiplication = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("*"))
        self.Multiplication.setGeometry(QtCore.QRect(310, 320, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Multiplication.setFont(font)
        self.Multiplication.setObjectName("Multiplication")
        self.Five = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("5"))
        self.Five.setGeometry(QtCore.QRect(110, 420, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Five.setFont(font)
        self.Five.setObjectName("Five")
        self.Dot = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.dot_it("."))
        self.Dot.setGeometry(QtCore.QRect(110, 620, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Dot.setFont(font)
        self.Dot.setObjectName("Dot")
        self.Three = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("3"))
        self.Three.setGeometry(QtCore.QRect(210, 520, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Three.setFont(font)
        self.Three.setObjectName("Three")
        self.Addition = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("+"))
        self.Addition.setGeometry(QtCore.QRect(310, 520, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Addition.setFont(font)
        self.Addition.setObjectName("Addition")
        self.One = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("1"))
        self.One.setGeometry(QtCore.QRect(10, 520, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.One.setFont(font)
        self.One.setObjectName("One")
        self.Six = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("6"))
        self.Six.setGeometry(QtCore.QRect(210, 420, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Six.setFont(font)
        self.Six.setObjectName("Six")
        self.Subtraction = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("-"))
        self.Subtraction.setGeometry(QtCore.QRect(310, 420, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Subtraction.setFont(font)
        self.Subtraction.setObjectName("Subtraction")
        self.Two = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("2"))
        self.Two.setGeometry(QtCore.QRect(110, 520, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Two.setFont(font)
        self.Two.setObjectName("Two")
        self.Zero = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("0"))
        self.Zero.setGeometry(QtCore.QRect(10, 620, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Zero.setFont(font)
        self.Zero.setObjectName("Zero")
        self.Equals = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.calculate_it("="))
        self.Equals.setGeometry(QtCore.QRect(209, 620, 191, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Equals.setFont(font)
        self.Equals.setObjectName("Equals")
        self.Four = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.press_it("4"))
        self.Four.setGeometry(QtCore.QRect(10, 420, 90, 90))
        font = QtGui.QFont()
        font.setPointSize(35)
        self.Four.setFont(font)
        self.Four.setObjectName("Four")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 410, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def dot_it(self,dot):
        screen = self.OutputLabel.text()
        if (max(screen.rfind('+'), screen.rfind('-'), screen.rfind('*'), screen.rfind('/'))) >= screen.rfind('.'):
            if screen[-1] in ('+', '-', '*','/'):
                self.OutputLabel.setText(f'{screen}0{dot}')
            else:
                self.OutputLabel.setText(f'{screen}{dot}')

    def calculate_it(self, action): 
        if self.OutputLabel.text() and (self.OutputLabel.text() not in ('0', 'ERROR')) and self.OutputLabel.text()[-1] not in ('+', '-', '*','/'):
            wynik = pd.eval(self.OutputLabel.text())
            if action == '1/x':
                wynik = 1/wynik
            elif action == '%':
                wynik = wynik*0.01
            elif action == 'P':
                wynik = pow(wynik,2)
            elif action == 'R':
                wynik = math.sqrt(wynik)

            if wynik%1 == 0:
                wynik = int(wynik)
        
            str_wynik = str(wynik)
            if str_wynik == 'inf':
                str_wynik = "ERROR"
            self.OutputLabel.setText(str_wynik)

    def press_it(self, pressed):
        if pressed == "C":
            self.OutputLabel.setText('0')
        elif pressed == "D":
            if self.OutputLabel.text()[-1] != 'R':
                self.OutputLabel.setText(self.OutputLabel.text()[:-1])
        elif pressed in ('+', '-', '*','/'):
            if self.OutputLabel.text() and self.OutputLabel.text()[-1] not in ('+', '-', '*','/'):
                self.OutputLabel.setText(f'{self.OutputLabel.text()}{pressed}')
            elif self.OutputLabel.text() == False:
                self.OutputLabel.setText(f'{self.OutputLabel.text()}{pressed}')
        else:
            if self.OutputLabel.text() in ('0',"ERROR" ):
                self.OutputLabel.setText("")
            self.OutputLabel.setText(f'{self.OutputLabel.text()}{pressed}')

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Calculator by Jacek Mońka"))
        self.OutputLabel.setText(_translate("MainWindow", "0"))
        self.Percentage.setText(_translate("MainWindow", "%"))
        self.C.setText(_translate("MainWindow", "C"))
        self.Delete.setText(_translate("MainWindow", "<<"))
        self.Root.setText(_translate("MainWindow", "√x"))
        self.Power.setText(_translate("MainWindow", "x²"))
        self.Division.setText(_translate("MainWindow", "÷"))
        self.Inverse.setText(_translate("MainWindow", "1/x"))
        self.Eight.setText(_translate("MainWindow", "8"))
        self.Seven.setText(_translate("MainWindow", "7"))
        self.Nine.setText(_translate("MainWindow", "9"))
        self.Multiplication.setText(_translate("MainWindow", "*"))
        self.Five.setText(_translate("MainWindow", "5"))
        self.Dot.setText(_translate("MainWindow", "."))
        self.Three.setText(_translate("MainWindow", "3"))
        self.Addition.setText(_translate("MainWindow", "+"))
        self.One.setText(_translate("MainWindow", "1"))
        self.Six.setText(_translate("MainWindow", "6"))
        self.Subtraction.setText(_translate("MainWindow", "-"))
        self.Two.setText(_translate("MainWindow", "2"))
        self.Zero.setText(_translate("MainWindow", "0"))
        self.Equals.setText(_translate("MainWindow", "="))
        self.Four.setText(_translate("MainWindow", "4"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
